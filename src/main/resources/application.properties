################### DataSource Configuration ##########################

demo.datasource.driver-class-name=org.postgresql.Driver
demo.datasource.url=jdbc:postgresql://localhost:5432/restsecuritysample
demo.datasource.username=postgres
demo.datasource.password=postgres

################### Hibernate Configuration ##########################

demo.jpa.hibernate.ddl-auto=update
demo.jpa.show-sql=true

################### bootup Configuration ##########################

application.controller.package.address=ir.bigz.spring.restSecuritySample.controller

################### Jwt Configuration ##########################

application.jwt.secretKey=springbootApplicationDemoUserManagementSpringSecurityThisIsSecureKeyForJWTTokenUseSHA256GenerateToken
application.jwt.tokenPrefix=Bearer 
application.jwt.tokenExpirationAfterMilliSecond=7200000
#1hr:3600000 2hr:7200000

###################  roles Configuration ##########################

application.basicRole.user = USER

###################  permit url for custom filter Configuration ##########################

application.permit.url =auth,oauth2,webjars,user

################### basic url Configuration ##########################

application.basicUrl.home = http://localhost:8080/oauth/home

application.oauth2.authorizedRedirectUris = http://localhost:8080/oauth2/redirect


################### oAuth2 Configuration ##########################
# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
spring.security.oauth2.client.registration.google.clientId = 481376177565-qr1rjjrhgaad327c7q39u2l4pbgi7ivs.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret = 023eCkvr0gY0f5_CnOXL0qc2
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/oauth2/callback/google
#spring.security.oauth2.client.registration.google.scope=profile,email

#security.oauth2.client.access-token-uri= https://www.googleapis.com/oauth2/v3/token
#security.oauth2.client.user-authorization-uri= https://accounts.google.com/o/oauth2/auth
#security.oauth2.client.token-name= oauth_token
#security.oauth2.client.authentication-scheme= query
#security.oauth2.client.client-authentication-scheme= form
#security.oauth2.client.scope= profile email

#security.oauth2.resource.prefer-token-info= false
#security.oauth2.resource.user-info-uri= https://www.googleapis.com/userinfo/v2/me


################### oAuth2 common Configuration ##########################
# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
#security.oauth2.client.client-id= # OAuth2 client id.
#security.oauth2.client.client-secret= # OAuth2 client secret. A random secret is generated by default

# SECURITY OAUTH2 RESOURCES (ResourceServerProperties)
#security.oauth2.resource.id= # Identifier of the resource.
#security.oauth2.resource.jwt.key-uri= # The URI of the JWT token. Can be set if the value is not available and the key is public.
#security.oauth2.resource.jwt.key-value= # The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.
#security.oauth2.resource.jwk.key-set-uri= # The URI for getting the set of keys that can be used to validate the token.
#security.oauth2.resource.prefer-token-info=true # Use the token info, can be set to false to use the user info.
#security.oauth2.resource.service-id=resource #
#security.oauth2.resource.token-info-uri= # URI of the token decoding endpoint.
#security.oauth2.resource.token-type= # The token type to send when using the userInfoUri.
#security.oauth2.resource.user-info-uri= # URI of the user endpoint.

# SECURITY OAUTH2 SSO (OAuth2SsoProperties)
#security.oauth2.sso.login-path=/login # Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server